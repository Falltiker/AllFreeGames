import requests
import logging
from datetime import datetime

def get_free_epic_games(locale="ru", country="UA"):
    url = "https://store-site-backend-static.ak.epicgames.com/freeGamesPromotions"
    params = {
        "locale": locale,
        "country": country,
        "allowCountries": country
    }

    logging.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä Epic Games...")
    try:
        response = requests.get(url, params=params)
        response.raise_for_status()
        data = response.json()
        logging.info("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Epic Games: {e}")
        return {}, ""

    games = data['data']['Catalog']['searchStore']['elements']
    logging.info(f"–ü–æ–ª—É—á–µ–Ω–æ {len(games)} –∏–≥—Ä –∏–∑ API.")

    free_games = {
        "current": [],
        "upcoming": []
    }

    current_date = datetime.now().date()

    for i, game in enumerate(games, start=1):
        title = game.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
        logging.debug(f"[{i}] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–≥—Ä—ã: {title}")

        if "Mystery Game" in title:
            logging.info(f"[{i}] –ü—Ä–æ–ø—É—â–µ–Ω–∞ –∏–≥—Ä–∞ '{title}' (Mystery Game).")
            continue

        image = [img.get("url") for img in game.get("keyImages", [])]
        if not image:
            logging.warning(f"[{i}] –£ –∏–≥—Ä—ã '{title}' –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.")

        slug = game.get("productSlug")
        if not slug:
            logging.warning(f"[{i}] –£ –∏–≥—Ä—ã '{title}' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç productSlug.")
        category = game["categories"][0]["path"] if game.get("categories") else "unknown"

        if slug:
            url = f"https://store.epicgames.com/ru/{'bundles' if category == 'bundles' else 'p'}/{slug}"
        else:
            url = None

        description = game.get("description", "")
        promotions = game.get("promotions", {})
        if not promotions:
            logging.info(f"[{i}] –£ –∏–≥—Ä—ã '{title}' –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∞–∫—Ü–∏–∏.")
            continue

        promotional_offers = promotions.get('promotionalOffers', [])
        if not promotional_offers:
            logging.info(f"[{i}] –£ –∏–≥—Ä—ã '{title}' –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–∞–∑–¥–∞—á.")
            continue

        offers = promotional_offers[0].get('promotionalOffers', [])
        for promo in offers:
            if promo.get("discountSetting", {}).get("discountPercentage") == 0:
                start = promo.get("startDate")
                end = promo.get("endDate")
                try:
                    start_date = datetime.fromisoformat(start.replace("Z", "+00:00")).date()
                    end_date = datetime.fromisoformat(end.replace("Z", "+00:00")).date()
                except Exception as e:
                    logging.warning(f"[{i}] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç —É –∏–≥—Ä—ã '{title}': {e}")
                    start_date = end_date = None

                if start_date and end_date and start_date <= current_date <= end_date:
                    logging.info(f"[{i}] –ò–≥—Ä–∞ '{title}' —Å–µ–π—á–∞—Å –±–µ—Å–ø–ª–∞—Ç–Ω–∞.")
                    free_games["current"].append({
                        "title": title,
                        "description": description,
                        "url": url,
                        "start_date": start_date.strftime("%d.%m.%Y"),
                        "end_date": end_date.strftime("%d.%m.%Y"),
                    })
                elif start_date and start_date > current_date:
                    logging.info(f"[{i}] –ò–≥—Ä–∞ '{title}' –±—É–¥–µ—Ç —Ä–∞–∑–¥–∞–≤–∞—Ç—å—Å—è –≤ –±—É–¥—É—â–µ–º.")
                    free_games["upcoming"].append({
                        "title": title,
                        "description": description,
                        "url": url,
                        "start_date": start_date.strftime("%d.%m.%Y"),
                        "end_date": end_date.strftime("%d.%m.%Y"),
                    })

    # Markdown
    md = "## üéÆ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∏–≥—Ä—ã –∏–∑ Epic Games Store\n\n"
    md += "### –°–µ–π—á–∞—Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ:\n\n"
    md += "| –ò–≥—Ä–∞ | –î–∞—Ç—ã —Ä–∞–∑–¥–∞—á–∏ | –°—Å—ã–ª–∫–∞ |\n|------|----------------|--------|\n"
    for g in free_games["current"]:
        md += f"| {g['title']} | {g['start_date']} ‚Äî {g['end_date']} | [–°—Å—ã–ª–∫–∞]({g['url']}) |\n"

    md += "\n### –ë—É–¥—É—â–∏–µ —Ä–∞–∑–¥–∞—á–∏:\n\n"
    for g in free_games["upcoming"]:
        md += f"| {g['title']} | {g['start_date']} ‚Äî {g['end_date']} | [–°—Å—ã–ª–∫–∞]({g['url']}) |\n"

    logging.info("–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ markdown –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
    return free_games, md


# –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫
if __name__ == "__main__":
    get_free_epic_games()
